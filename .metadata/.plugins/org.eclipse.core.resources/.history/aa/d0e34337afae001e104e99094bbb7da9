package com.osc.websocket.config;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.context.event.ApplicationReadyEvent;
import org.springframework.context.ApplicationListener;
import org.springframework.scheduling.annotation.Scheduled;
import org.springframework.stereotype.Component;

import com.grpc.user.product.storeAllDataInCaheServiceGrpc.storeAllDataInCaheServiceBlockingStub;
import com.osc.websocket.entities.Product;
import com.osc.websocket.repository.ProductRepository;

import net.devh.boot.grpc.client.inject.GrpcClient;

@Component
public class ApplicationStartupListener implements ApplicationListener<ApplicationReadyEvent> {

    private final ProductRepository repository;
    
    @GrpcClient("product-service")
	storeAllDataInCaheServiceBlockingStub storeAllDataBlockingStub;

    @Autowired
    public ApplicationStartupListener(ProductRepository repository) {
        this.repository = repository;
    }

    @Override
    public void onApplicationEvent(ApplicationReadyEvent event) {
        // Fetch data from the database on startup
        fetchDataAndProcess();
    }

    @Scheduled(fixedRate = 600000) // 10 minutes (in milliseconds)
    public void scheduledTask() {
        // Fetch data from the database every 10 minutes
        fetchDataAndProcess();
    }

    private void fetchDataAndProcess() {
        // Fetch data from the database
         List<Product> allProductList = repository.findAll();

    }
    
    
    public boolean storeInCache(List<Product> productList) {
    	
    	
    	
    	return false;
    }
    
}