package com.osc.cache.service;

import java.util.List;

import com.grpc.user.similarproduct.FindDashBoardDataRequest;
import com.grpc.user.similarproduct.FindDashBoardDataResponse;
import com.grpc.user.similarproduct.GetDashBoardServiceGrpc;
import com.hazelcast.client.HazelcastClient;
import com.hazelcast.client.config.ClientConfig;
import com.hazelcast.config.SerializerConfig;
import com.hazelcast.core.HazelcastInstance;
import com.hazelcast.map.IMap;
import com.osc.cache.payload.Category;
import com.osc.cache.payload.ProductDto;
import com.osc.cache.serializer.CategorySerializer;
import com.osc.cache.serializer.ProductDtoSerializer;

import io.grpc.stub.StreamObserver;

public class ProductServiceHelper extends GetDashBoardServiceGrpc.GetDashBoardServiceImplBase {
	
	
	public static List<ProductDto> getAllProducts() {
		ClientConfig config = new ClientConfig();

		config.setClusterName("dev");
		config.getSerializationConfig()
			.addSerializerConfig(new SerializerConfig()
			.setTypeClass(ProductDto.class)
			.setImplementation(new ProductDtoSerializer()));
		config.getSerializationConfig()
			  .addSerializerConfig(new SerializerConfig()
			  .setTypeClass(Category.class)
			  .setImplementation(new CategorySerializer()));
		
		HazelcastInstance hazelcastInstanceClient = HazelcastClient.newHazelcastClient(config);

		IMap<String, List<ProductDto>> map = hazelcastInstanceClient.getMap("all-product-list");
		
		return map.get("All-Products");
	}

	@Override
	public void findSimilarProducts(FindDashBoardDataRequest request,
			StreamObserver<FindDashBoardDataResponse> responseObserver) {
		
		List<ProductDto> allProductList = getAllProducts();
		
		if()
		
	}
	
	
	

}
